<project
	xmlns:if="ant:if"
    xmlns:unless="ant:unless">
    
	<loadproperties srcFile="DESCRIPTION" />
	<property name="tarfile" value="provBookR_${Version}.tar.gz" />

 	<target name="roxygenize">
    	<exec executable="Rscript" >
    		<arg line="-e roxygen2::roxygenise()"/>
    	</exec>
	</target>
 		
    <target name="build" depends="roxygenize">
    	<exec executable="R" >
    		<arg line="CMD build --no-build-vignettes ."/>
    	</exec>
    </target>

	<target name="check" depends="build">
		<exec executable="R" >
  			<arg line="CMD check --no-vignettes --no-build-vignettes ${tarfile}"/>
	   	</exec>
    </target>

    <target name="install" depends="check">
        <exec executable="R" >
  			<arg line="CMD INSTALL ${tarfile}"/>
		</exec>
    </target>
    
    <target name="install-no-check" depends="build">
        <exec executable="R" >
  			<arg line="CMD INSTALL ${tarfile}"/>
		</exec>
    </target>
    
	<target name="create-json">
		<!-- If you include R scripts to test with, you would add a rule
		     like this for each of them that can re-generate the json, so
		     they can be updated as rdtLite output changes. -->
		<!--<antcall target="create-one-json">
			<param name="script" value="console"/>
		</antcall>-->
	</target>
	
	<target name="create-one-json">
		<antcall target="json">
			<param name="theFile" value="${script}.R"/>
		</antcall>
		<antcall target="create-book">
			<param name="theFile" value="${script}.json"/>
		</antcall>
	</target>	
	<target name="create-book">
		<basename property="scriptname" file="${theFile}" suffix="json" />
		<exec executable="Rscript" dir="inst/testdata" output="${scriptname}.book">
			<arg line="-e &quot;provBookR::prov.book.file('${theFile}')&quot;" />
		</exec>
		<echo> Comparing books </echo>
		<exec executable="diff">
			<arg value="--strip-trailing-cr"/>
			<arg file="inst/testbooks/${scriptname}.expected"/>
			<arg file="${scriptname}.book"/>
		</exec>
		<input
			message="Do you want to update the expected book for ${scriptname}?"
			validargs="y,n"
			addproperty="answer"
		/>
		<condition property="do.update">
			<equals arg1="y" arg2="${answer}"/>
		</condition>
		<antcall target="update-book">
			<param name="script" value="${scriptname}"/>
		</antcall>
		<antcall target="delete-book">
			<param name="script" value="${scriptname}"/>
		</antcall>
	</target>
	
	<target name="update-book" if="do.update">
		<echo> Updating the book </echo>
		<move file="${script}.book" tofile="inst/testbooks/${script}.expected" />
	</target>
	
	<target name="delete-book" unless="do.update">
		<echo> Deleting the new book </echo>
        <delete file="${script}.book"/>
	</target>
	
	<target name="json">
		<echo message="${theFile}"/>
		<exec executable="Rscript" dir="inst/testscripts">
			<arg line="-e &quot;rdtLite::prov.run('${theFile}', prov.dir='.')&quot;"/>
		</exec>
		<basename property="scriptname" file="${theFile}" suffix="R" />
		<move file="inst/testscripts/prov_${scriptname}/prov.json" tofile="inst/testdata/${scriptname}.json" />
		<delete dir="inst/testscripts/prov_${scriptname}" />
	</target>

    <target name="cran-check" depends="build, create-json">
    	<exec executable="R" >
    		<arg line="CMD check --as-cran --no-vignettes --no-build-vignettes ${tarfile}"/>
    	</exec>
    </target>

    <target name="clean">
        <delete dir="provBookR.Rcheck" verbose="false"/>
        <delete file="${tarfile}" verbose="false"/>
    </target>

	
</project>
